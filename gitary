#!/bin/bash

datediff='today'
commitmsg=''
template=''

addfile(){
  shift
  local datefile=$(datetofile "$datediff")
  for file in "$@"; do
    cp "$file" $(dirname "$datefile")
    echo "!file $file" >> $datefile
  done
  edit
}

edit(){
  local datefile=$(datetofile "$datediff")
  [ ! -d $(dirname "$datefile") ] && mkdir -p $(dirname "$datefile")
  if [ "$commitmsg" ]; then
    echo "$commitmsg" >> "$datefile"
  else
    openeditor "$datefile"
  fi
  commit
}

search (){
  cd "$gitary_data"
  needle="$@"
  if [ -n "$needle" ]; then
    needle="(?i)$needle"
    found=$(grep --color --exclude-dir=.git -RP "$needle" [1-9]* | grep -v "== .* ==" | sed 's/:/ => /' | sort)
    echo "$found"
  fi
}

status (){
  cd "$gitary_data"
  git status
}

show (){
  local datefile=$(datetofile "$datediff")
  if [ -f $datefile ]; then
    cat $datefile
  else
    echo "Date doesn't exist"
  fi
}

log(){
  cd "$gitary_data"
  if hash tig 2>/dev/null; then
    tig
  else
    git log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
  fi
}

openeditor (){
  file="$@"
  # If its a new file, open our default template
  if [ ! -f $file ]; then
    case "$EDITOR" in
      "vim")
        $EDITOR $file -c"read $gitary_template | :vsplit | :wincmd l" $(datetofile "yesterday") -c":bn | :split | :wincmd j" $gitary_data/help -c":bn | :wincmd h"
        ;;
      *)
        $EDITOR $file 
        ;;
    esac
  # Just open the file
  else
    $EDITOR $file -c":vsplit | :wincmd l" $(datetofile "yesterday") -c":bn | :split | :wincmd j" $gitary_data/help -c":bn | :wincmd h"
  fi
}

commit (){
  # go to our entry directory
  cd "$gitary_data"
  # add all the files, and commit with list offiles added 
  git add -A "."
  [ -n "$(git status --porcelain)" ] && git commit -m "Auto commit 
 $(git status --porcelain)"
  # Push to origin if changes have been commited and we have a valid url
  if [ $(git shortlog origin/master..master | wc -l) -gt 0 ] \
  && [ $(git remote show origin 3>/dev/null| grep -c "Push  URL:") -gt 0 ]; then
    git push
  fi
}

datetofile (){
    local date=$(date -d "$1" +'%Y-%m-%d')
    read Y M D <<< ${date//[-]/ }
    echo "$gitary_data/$Y/$M/$D"
}

commands (){
  case "$1" in
    "add")
      addfile "$@"
      ;;
    "edit")
      edit
      ;;
    "log")
      log
      ;;
    "show")
      shift
      show "$@"
      ;;
    "search")
      shift
      search "$@"
      ;;
    "status")
      shift
      status "$@"
      ;;
    *)
      help
      exit 1
      ;;
  esac
}

help (){
  echo "
Commands
---------------------------------
add    - Add arbitrary file.
edit   - Edit today.
log    - Show git log.
search - Simple grep for term.
show   - Show file.
-d -> Set edit date.
-h -> Show help file.
-m -> Quick add.

Syntax
------------------------------
@Name_of_Person
!Some_Property
#Some_Tag
"
  exit
}

[ -z "$GITARY_DATA" ] && gitary_data="$HOME/.gitary" || gitary_data=$GITARY_DATA
[ -z "$GITARY_TEMPLATE" ] && gitary_template="$gitary_data/template" || gitary_template=$GITARY_TEMPLATE

if [ ! -d "$gitary_data/.git" ]; then
  echo "$gitary_data is not a git repo, please run \`git init\` inside"
  echo "Or set GITARY_DATA to your git directory"
  exit
fi

[ ! -f $gitary_template ] && touch $gitary_template

ARGS=$(getopt -o d:hm:t: -l "date:,help,message:" -n "gitary" -- "$@");
eval set -- "$ARGS";
while true; do
  case "$1" in
    -d|--date)
      shift;
      if [ -n "$1" ]; then
        datediff="$1";
        shift;
      fi 
      ;;
    -h|--help)
      shift;
      help
      ;;
    -m|--message)
      shift;
      commitmsg=$1
      shift;
      ;;
    --)
      shift;
      commands "$@"
      break;
      ;;
  esac
done
