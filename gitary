#!/bin/bash

datediff=''
date=''
commitmsg=''
template=''

edit(){
  setEditDate
  # parse date into variables 
  read Y M D h m s <<< ${date//[-: ]/ }
  # Make path for new files 
  [ ! -d "$gitary_data/$Y/$M" ] && mkdir -p "$gitary_data/$Y/$M"
  if [ "$commitmsg" ]; then
    echo "$commitmsg" >> "$gitary_data/$Y/$M/$D"
  else
    openeditor "$gitary_data/$Y/$M/$D"
  fi
  commit
}

openeditor (){
  file="$@"
  # If its a new file, open our default template
  if [ ! -f $file ]; then
    case "$EDITOR" in
      "vim")
        $EDITOR $file +"read $template"
        ;;
      *)
        echo "Sorry I don't know how to use $EDITOR"
        $EDITOR $file 
        ;;
    esac
  # Just open the file
  else
    $EDITOR $file 
  fi
}

commit (){
  # go to our entry directory
  cd "$gitary_data"
  # add all the files, and commit with list offiles added 
  git add -A "."
  [ -n "$(git status --porcelain)" ] && git commit -m "Auto commit 
 $(git status --porcelain)"
 # Push to origin if changes have been commited
 [ $(git shortlog origin/master..master | wc -l ) -gt 0 ] && git push
}

search (){
  cd "$gitary_data"
  needle="$@"
  if [ -n "$needle" ]; then
    echo "          Term                 "
    echo "-------------------------------"
    found=$(grep --color --exclude-dir=.git -RP "$needle" . | sed 's/.\///' | sed 's/:/ => /')
    echo "$found"
  fi
}

setEditDate (){
  if [ -z "$datediff" ]; then
    date=$(date +'%Y-%m-%d %H:%M:%S')
  else
    date=$(date -d "$datediff" +'%Y-%m-%d %H:%M:%S')
  fi
}

commands (){
  case "$1" in
    "edit")
      edit
      ;;
    "search")
      shift
      search $@
      ;;
    *)
      echo "Try --help, because $1 didn't work"
      ;;
  esac
}

help (){
  echo "
edit   - Edit today.
search - Simple grep for term.
-d -> Set edit date.
-h -> Show help file.
-m -> Quick add.
"
  exit
}

[ -z "$GITARY_DATA" ] && gitary_data="$HOME/.gitary" || gitary_data=$GITARY_DATA
template="$gitary_data/template"

if [ ! -d "$gitary_data/.git" ]; then
  echo "$gitary_data is not a git repo, please run \`git init\` inside"
  echo "Or set GITARY_DATA to your git directory"
  exit
fi

ARGS=$(getopt -o d:hm:t: -l "date:,help,message:" -n "gitary" -- "$@");
eval set -- "$ARGS";
while true; do
  case "$1" in
    -d|--date)
      shift;
      if [ -n "$1" ]; then
        datediff="$1";
        shift;
      fi 
      ;;
    -h|--help)
      shift;
      help
      ;;
    -m|--message)
      shift;
      commitmsg=$1
      shift;
      ;;
    --)
      shift;
      commands "$@"
      break;
      ;;
  esac
done
